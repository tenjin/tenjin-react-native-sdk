/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#ifndef __cplusplus
#error This file must be compiled as Obj-C++. If you are importing it, you must change your file extension to .mm.
#endif

// Avoid multiple includes of RNTenjinSpec symbols
#ifndef RNTenjinSpec_H
#define RNTenjinSpec_H

#import <Foundation/Foundation.h>
#import <RCTRequired/RCTRequired.h>
#import <RCTTypeSafety/RCTConvertHelpers.h>
#import <RCTTypeSafety/RCTTypedModuleConstants.h>
#import <React/RCTBridgeModule.h>
#import <React/RCTCxxConvert.h>
#import <React/RCTManagedPointer.h>
#import <ReactCommon/RCTTurboModule.h>
#import <optional>
#import <vector>


@protocol NativeTenjinSpec <RCTBridgeModule, RCTTurboModule>

- (void)initialize:(NSString *)apiKey;
- (void)connect;
- (void)optIn;
- (void)optOut;
- (void)optInParams:(NSArray *)params;
- (void)optOutParams:(NSArray *)params;
- (void)optInOutUsingCMP;
- (void)optOutGoogleDMA;
- (void)optInGoogleDMA;
- (void)setAppStore:(NSString *)type;
- (void)transaction:(NSString *)productName
       currencyCode:(NSString *)currencyCode
           quantity:(double)quantity
          unitPrice:(double)unitPrice;
- (void)transactionWithReceipt:(NSString *)productName
                  currencyCode:(NSString *)currencyCode
                      quantity:(double)quantity
                     unitPrice:(double)unitPrice
                   transaction:(NSString *)transaction
                          data:(NSString *)data;
- (void)eventWithName:(NSString *)name;
- (void)eventWithNameAndValue:(NSString *)name
                        value:(NSString *)value;
- (void)appendAppSubversion:(double)version;
- (void)updatePostbackConversionValue:(double)conversionValue;
- (void)updatePostbackConversionValueWithCoarseValue:(double)conversionValue
                                         coarseValue:(NSString *)coarseValue;
- (void)updatePostbackConversionValueWithCoarseValueAndLockWindow:(double)conversionValue
                                                      coarseValue:(NSString *)coarseValue
                                                       lockWindow:(BOOL)lockWindow;
- (void)getAttributionInfo:(RCTResponseSenderBlock)successCallback
             errorCallback:(RCTResponseSenderBlock)errorCallback;
- (void)eventAdImpressionAdMob:(NSDictionary *)json;
- (void)eventAdImpressionAppLovin:(NSDictionary *)json;
- (void)eventAdImpressionHyperBid:(NSDictionary *)json;
- (void)eventAdImpressionIronSource:(NSDictionary *)json;
- (void)eventAdImpressionTopOn:(NSDictionary *)json;
- (void)eventAdImpressionTradPlus:(NSDictionary *)json;
- (void)setCustomerUserId:(NSString *)userId;
- (void)getCustomerUserId:(RCTResponseSenderBlock)callback;
- (void)getAnalyticsInstallationId:(RCTResponseSenderBlock)callback;
- (void)setGoogleDMAParameters:(BOOL)adPersonalization
                    adUserData:(BOOL)adUserData;

@end

@interface NativeTenjinSpecBase : NSObject {
@protected
facebook::react::EventEmitterCallback _eventEmitterCallback;
}
- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;


@end

namespace facebook::react {
  /**
   * ObjC++ class for module 'NativeTenjin'
   */
  class JSI_EXPORT NativeTenjinSpecJSI : public ObjCTurboModule {
  public:
    NativeTenjinSpecJSI(const ObjCTurboModule::InitParams &params);
  };
} // namespace facebook::react

#endif // RNTenjinSpec_H
