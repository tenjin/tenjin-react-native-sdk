/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNTenjinSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_initialize(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->initialize(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_connect(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->connect(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optIn(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optIn(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optOut(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optOut(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optInParams(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optInParams(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optOutParams(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optOutParams(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asArray(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optInOutUsingCMP(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optInOutUsingCMP(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optOutGoogleDMA(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optOutGoogleDMA(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_optInGoogleDMA(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->optInGoogleDMA(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_setAppStore(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->setAppStore(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_transaction(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->transaction(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber(),
    count <= 3 ? throw jsi::JSError(rt, "Expected argument in position 3 to be passed") : args[3].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_transactionWithReceipt(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->transactionWithReceipt(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber(),
    count <= 3 ? throw jsi::JSError(rt, "Expected argument in position 3 to be passed") : args[3].asNumber(),
    count <= 4 ? throw jsi::JSError(rt, "Expected argument in position 4 to be passed") : args[4].asString(rt),
    count <= 5 ? throw jsi::JSError(rt, "Expected argument in position 5 to be passed") : args[5].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventWithName(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventWithName(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventWithNameAndValue(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventWithNameAndValue(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_appendAppSubversion(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->appendAppSubversion(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_updatePostbackConversionValue(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->updatePostbackConversionValue(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_updatePostbackConversionValueWithCoarseValue(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->updatePostbackConversionValueWithCoarseValue(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_updatePostbackConversionValueWithCoarseValueAndLockWindow(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->updatePostbackConversionValueWithCoarseValueAndLockWindow(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asBool()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_getAttributionInfo(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->getAttributionInfo(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionAdMob(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventAdImpressionAdMob(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionAppLovin(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventAdImpressionAppLovin(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionHyperBid(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventAdImpressionHyperBid(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionIronSource(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventAdImpressionIronSource(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionTopOn(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventAdImpressionTopOn(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionTradPlus(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->eventAdImpressionTradPlus(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_setCustomerUserId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->setCustomerUserId(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_getCustomerUserId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->getCustomerUserId(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_getAnalyticsInstallationId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->getAnalyticsInstallationId(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeTenjinCxxSpecJSI_setGoogleDMAParameters(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeTenjinCxxSpecJSI *>(&turboModule)->setGoogleDMAParameters(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asBool(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asBool()
  );
  return jsi::Value::undefined();
}

NativeTenjinCxxSpecJSI::NativeTenjinCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("Tenjin", jsInvoker) {
  methodMap_["initialize"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_initialize};
  methodMap_["connect"] = MethodMetadata {0, __hostFunction_NativeTenjinCxxSpecJSI_connect};
  methodMap_["optIn"] = MethodMetadata {0, __hostFunction_NativeTenjinCxxSpecJSI_optIn};
  methodMap_["optOut"] = MethodMetadata {0, __hostFunction_NativeTenjinCxxSpecJSI_optOut};
  methodMap_["optInParams"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_optInParams};
  methodMap_["optOutParams"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_optOutParams};
  methodMap_["optInOutUsingCMP"] = MethodMetadata {0, __hostFunction_NativeTenjinCxxSpecJSI_optInOutUsingCMP};
  methodMap_["optOutGoogleDMA"] = MethodMetadata {0, __hostFunction_NativeTenjinCxxSpecJSI_optOutGoogleDMA};
  methodMap_["optInGoogleDMA"] = MethodMetadata {0, __hostFunction_NativeTenjinCxxSpecJSI_optInGoogleDMA};
  methodMap_["setAppStore"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_setAppStore};
  methodMap_["transaction"] = MethodMetadata {4, __hostFunction_NativeTenjinCxxSpecJSI_transaction};
  methodMap_["transactionWithReceipt"] = MethodMetadata {6, __hostFunction_NativeTenjinCxxSpecJSI_transactionWithReceipt};
  methodMap_["eventWithName"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventWithName};
  methodMap_["eventWithNameAndValue"] = MethodMetadata {2, __hostFunction_NativeTenjinCxxSpecJSI_eventWithNameAndValue};
  methodMap_["appendAppSubversion"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_appendAppSubversion};
  methodMap_["updatePostbackConversionValue"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_updatePostbackConversionValue};
  methodMap_["updatePostbackConversionValueWithCoarseValue"] = MethodMetadata {2, __hostFunction_NativeTenjinCxxSpecJSI_updatePostbackConversionValueWithCoarseValue};
  methodMap_["updatePostbackConversionValueWithCoarseValueAndLockWindow"] = MethodMetadata {3, __hostFunction_NativeTenjinCxxSpecJSI_updatePostbackConversionValueWithCoarseValueAndLockWindow};
  methodMap_["getAttributionInfo"] = MethodMetadata {2, __hostFunction_NativeTenjinCxxSpecJSI_getAttributionInfo};
  methodMap_["eventAdImpressionAdMob"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionAdMob};
  methodMap_["eventAdImpressionAppLovin"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionAppLovin};
  methodMap_["eventAdImpressionHyperBid"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionHyperBid};
  methodMap_["eventAdImpressionIronSource"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionIronSource};
  methodMap_["eventAdImpressionTopOn"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionTopOn};
  methodMap_["eventAdImpressionTradPlus"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_eventAdImpressionTradPlus};
  methodMap_["setCustomerUserId"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_setCustomerUserId};
  methodMap_["getCustomerUserId"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_getCustomerUserId};
  methodMap_["getAnalyticsInstallationId"] = MethodMetadata {1, __hostFunction_NativeTenjinCxxSpecJSI_getAnalyticsInstallationId};
  methodMap_["setGoogleDMAParameters"] = MethodMetadata {2, __hostFunction_NativeTenjinCxxSpecJSI_setGoogleDMAParameters};
}


} // namespace facebook::react
