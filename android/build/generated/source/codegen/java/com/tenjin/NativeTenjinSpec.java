
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.tenjin;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.Callback;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;

public abstract class NativeTenjinSpec extends ReactContextBaseJavaModule implements TurboModule {
  public static final String NAME = "Tenjin";

  public NativeTenjinSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  @ReactMethod
  @DoNotStrip
  public abstract void initialize(String apiKey);

  @ReactMethod
  @DoNotStrip
  public abstract void connect();

  @ReactMethod
  @DoNotStrip
  public abstract void optIn();

  @ReactMethod
  @DoNotStrip
  public abstract void optOut();

  @ReactMethod
  @DoNotStrip
  public abstract void optInParams(ReadableArray params);

  @ReactMethod
  @DoNotStrip
  public abstract void optOutParams(ReadableArray params);

  @ReactMethod
  @DoNotStrip
  public abstract void optInOutUsingCMP();

  @ReactMethod
  @DoNotStrip
  public abstract void optOutGoogleDMA();

  @ReactMethod
  @DoNotStrip
  public abstract void optInGoogleDMA();

  @ReactMethod
  @DoNotStrip
  public abstract void setAppStore(String type);

  @ReactMethod
  @DoNotStrip
  public abstract void transaction(String productName, String currencyCode, double quantity, double unitPrice);

  @ReactMethod
  @DoNotStrip
  public abstract void transactionWithReceipt(String productName, String currencyCode, double quantity, double unitPrice, String transaction, String data);

  @ReactMethod
  @DoNotStrip
  public abstract void eventWithName(String name);

  @ReactMethod
  @DoNotStrip
  public abstract void eventWithNameAndValue(String name, String value);

  @ReactMethod
  @DoNotStrip
  public abstract void appendAppSubversion(double version);

  @ReactMethod
  @DoNotStrip
  public abstract void updatePostbackConversionValue(double conversionValue);

  @ReactMethod
  @DoNotStrip
  public abstract void updatePostbackConversionValueWithCoarseValue(double conversionValue, String coarseValue);

  @ReactMethod
  @DoNotStrip
  public abstract void updatePostbackConversionValueWithCoarseValueAndLockWindow(double conversionValue, String coarseValue, boolean lockWindow);

  @ReactMethod
  @DoNotStrip
  public abstract void getAttributionInfo(Callback successCallback, Callback errorCallback);

  @ReactMethod
  @DoNotStrip
  public abstract void eventAdImpressionAdMob(ReadableMap json);

  @ReactMethod
  @DoNotStrip
  public abstract void eventAdImpressionAppLovin(ReadableMap json);

  @ReactMethod
  @DoNotStrip
  public abstract void eventAdImpressionHyperBid(ReadableMap json);

  @ReactMethod
  @DoNotStrip
  public abstract void eventAdImpressionIronSource(ReadableMap json);

  @ReactMethod
  @DoNotStrip
  public abstract void eventAdImpressionTopOn(ReadableMap json);

  @ReactMethod
  @DoNotStrip
  public abstract void eventAdImpressionTradPlus(ReadableMap json);

  @ReactMethod
  @DoNotStrip
  public abstract void setCustomerUserId(String userId);

  @ReactMethod
  @DoNotStrip
  public abstract void getCustomerUserId(Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void getAnalyticsInstallationId(Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void setGoogleDMAParameters(boolean adPersonalization, boolean adUserData);
}
